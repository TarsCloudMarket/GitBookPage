name: build-docker-tag

on:
  push:
    tags:
      - v*
        
jobs:
  build:
    container: tarscloud/base-compiler
    runs-on: ubuntu-20.04
    env: 
      NAMESPACE: od-prod
      HELM_PACKAGE: cloud-gitbookserver-1.0.0.tgz
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.name }}
          password: ${{ secrets.pass }}
      - name: Get version
        id: get_version
        run: echo "::set-output name=VERSION::${GITHUB_REF#refs/tags/}"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.ACTION_DEPLOY_KEY }} 
          known_hosts: ${{ secrets.ACTION_KNOWN_HOSTS }} 
      - name: npm install
        run: npm install && npm run build
      - name: build docker
        run: exec-build.sh tarscloud/tars.nodejsbase nodejs . yaml/od-values.yaml ${{ steps.get_version.outputs.VERSION }} true
      - name: build helm 
        run: exec-helm.sh yaml/od-values.yaml ${{ steps.get_version.outputs.VERSION }}
      - name: scp helm 
        run: scp -P 16000 $HELM_PACKAGE root@${{ secrets.ACTION_DEPLOY_HOST }}:/root/od-deploy-script/
      - name: deploy 
        run: ssh -p 16000 root@${{ secrets.ACTION_DEPLOY_HOST }} "/root/od-deploy-script/deploy.sh $NAMESPACE /root/od-deploy-script/$HELM_PACKAGE"

